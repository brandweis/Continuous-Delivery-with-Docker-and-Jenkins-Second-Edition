pipeline {
  agent any

  environment {
    REGISTRY   = 'localhost:5001'
    IMAGE_NAME = getImageName()
    IMAGE_TAG  = getImageTag()
  }

  stages {
    stage('Build') {
      steps {
        dir('Chapter08/sample1') {
          sh './gradlew --no-daemon clean build'
        }
      }
    }

    stage('Unit Tests') {
      when {
        anyOf {
          branch 'master'
          branch 'feature'
          branch 'playground'
        }
      }
      steps {
        dir('Chapter08/sample1') {
          sh './gradlew --no-daemon test'
        }
      }
    }

    stage('Static Code Analysis') {
      when {
        anyOf {
          branch 'master'
          branch 'feature'
          branch 'playground'
        }
      }
      steps {
        dir('Chapter08/sample1') {
          sh './gradlew --no-daemon checkstyleMain'
        }
      }
    }

    stage('Code Coverage') {
      when {
        branch 'master'
      }
      steps {
        dir('Chapter08/sample1') {
          sh './gradlew --no-daemon jacocoTestReport jacocoTestCoverageVerification'
        }
      }
    }

    stage('Build and Push Docker Image') {
      when {
        allOf {
          not { branch 'playground' }
          expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
        }
      }
      steps {
        dir('Chapter08/sample1') {
          script {
            def fullImage = "${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
            sh """
              docker build -t ${fullImage} .
              echo testpassword | docker login https://${REGISTRY} -u testuser --password-stdin
              docker push ${fullImage}
            """
          }
        }
      }
    }
  }

  post {
    success {
      echo 'Pipeline completed successfully.'
    }
    failure {
      echo 'Pipeline failed. Check logs for details.'
    }
  }
}

def getImageName() {
  if (env.BRANCH_NAME == 'master') return 'calculator'
  if (env.BRANCH_NAME == 'feature') return 'calculator-feature'
  return 'skip'
}

def getImageTag() {
  if (env.BRANCH_NAME == 'master') return '1.0'
  if (env.BRANCH_NAME == 'feature') return '0.1'
  return 'skip'
}

